definitions:
  httputil.HTTPError:
    properties:
      message:
        type: string
    type: object
  model.InstitutionDeleteResponse:
    properties:
      message:
        type: string
    type: object
  model.InstitutionLoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  model.InstitutionRequest:
    properties:
      address:
        type: string
      email:
        type: string
      name:
        type: string
      password:
        type: string
      phone:
        type: string
      website:
        type: string
    type: object
  model.InstitutionResponse:
    properties:
      address:
        type: string
      email:
        type: string
      id:
        type: string
      name:
        type: string
      phone:
        type: string
      website:
        type: string
    type: object
  model.InstitutionToken:
    properties:
      token:
        type: string
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
paths:
  /api/institution/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an existing institution with authorization.
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Institution ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success delete institution data
          schema:
            $ref: '#/definitions/model.InstitutionDeleteResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      security:
      - BearerAuth: []
      summary: Delete Institution
      tags:
      - Institution
    get:
      consumes:
      - application/json
      description: Get data institution by ID with authorization.
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Institution ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success get institution data
          schema:
            $ref: '#/definitions/model.InstitutionResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "404":
          description: Data not found
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      security:
      - BearerAuth: []
      summary: Get Institution by ID
      tags:
      - Institution
    put:
      consumes:
      - application/json
      description: Update an existing institution with authorization.
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Institution ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated institution data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.InstitutionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success update institution data
          schema:
            $ref: '#/definitions/model.InstitutionResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "404":
          description: User not found
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      security:
      - BearerAuth: []
      summary: Update institution
      tags:
      - Institution
  /api/institution/login:
    post:
      consumes:
      - application/json
      description: Login user with email and password.
      parameters:
      - description: Institution login
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.InstitutionLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Institution login successfully
          schema:
            $ref: '#/definitions/model.InstitutionToken'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Login institution
      tags:
      - Institution
  /api/institution/register:
    post:
      consumes:
      - application/json
      description: Register institution with name, email, etc. Email must be unique
        and password will be hashed before saved to database.
      parameters:
      - description: Institution created details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.InstitutionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Institution created successfully
          schema:
            $ref: '#/definitions/model.InstitutionResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Register a new institution
      tags:
      - Institution
swagger: "2.0"
